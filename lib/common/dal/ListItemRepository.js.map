{"version":3,"sources":["common/dal/ListItemRepository.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8CAAkD;AAElD;IACI,4BAAsB,OAAe,EAAY,QAAsB;QAAjD,YAAO,GAAP,OAAO,CAAQ;QAAY,aAAQ,GAAR,QAAQ,CAAc;IAEvE,CAAC;IACD;;;;;;;;OAQG;IACU,uDAA0B,GAAvC,UAAwC,UAAkB,EAAE,MAAc,EAAE,kBAA0B,EAAE,qBAA8B,EAAE,MAAe,EAAE,GAAY;;;;;;;wBAGvJ,cAAc,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;wBACjD,MAAM,GAAM,cAAc,yBAAoB,MAAM,0BAAoB,qBAAqB,IAAI,IAAI,UAAI,kBAAkB,iBAAY,UAAU,cAAS,GAAK,CAAC;wBACzJ,qBAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,sBAAY,CAAC,cAAc,CAAC,EAAE,CAAC,EAAA;;wBAAtE,IAAI,GAAG,SAA+D;6BACxE,IAAI,CAAC,EAAE,EAAP,wBAAO;wBACS,qBAAM,IAAI,CAAC,IAAI,EAAE,EAAA;;wBAA3B,OAAO,GAAG,SAAiB;wBACjC,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACvD,MAAM,gBAAC,OAAO,CAAC,KAAK,EAAC;wBACzB,CAAC;;4BAGL,sBAAO,EAAE,EAAC;;;wBAEV,sBAAO,OAAO,CAAC,MAAM,CAAC,OAAK,CAAC,EAAC;;;;;KAEpC;IACL,yBAAC;AAAD,CA/BA,AA+BC,IAAA;AA/BY,gDAAkB","file":"common/dal/ListItemRepository.js","sourcesContent":["import { SPHttpClient } from '@microsoft/sp-http';\r\n\r\nexport class ListItemRepository {\r\n    constructor(protected SiteUrl: string, protected SPClient: SPHttpClient) {\r\n\r\n    }\r\n    /**\r\n     *\r\n     * @param filterText text value of the filter part of oData query 'Id eq 1'\r\n     * @param listId\r\n     * @param internalColumnName\r\n     * @param keyInternalColumnName\r\n     * @param webUrl\r\n     * @param top\r\n     */\r\n    public async getListItemsByFilterClause(filterText: string, listId: string, internalColumnName: string, keyInternalColumnName?: string, webUrl?: string, top?: number): Promise<any[]> {\r\n        let returnItems: any[];\r\n        try {\r\n            const webAbsoluteUrl = !webUrl ? this.SiteUrl : webUrl;\r\n            const apiUrl = `${webAbsoluteUrl}/_api/web/lists('${listId}')/items?$select=${keyInternalColumnName || 'Id'},${internalColumnName}&$filter=${filterText}&$top=${top}`;\r\n            const data = await this.SPClient.get(apiUrl, SPHttpClient.configurations.v1);\r\n            if (data.ok) {\r\n                const results = await data.json();\r\n                if (results && results.value && results.value.length > 0) {\r\n                    return results.value;\r\n                }\r\n            }\r\n\r\n            return [];\r\n        } catch (error) {\r\n            return Promise.reject(error);\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}