{"version":3,"sources":["controls/fieldCollectionData/FieldCollectionData.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,kDAAoD;AACpD,uEAA6E;AAC7E,qEAA+E;AAC/E,qEAAoE;AACpE,+DAA8D;AAE9D,qEAAqE;AACrE,wCAA0C;AAC1C,oEAAmF;AAEnF;IAAyC,uCAAqE;IAC5G,6BAAY,KAAgC;QAA5C,YACE,kBAAM,KAAK,CAAC,SAOb;QAED;;WAEG;QACK,eAAS,GAAG;YAClB,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,IAAI;aAChB,CAAC,CAAC;QACL,CAAC,CAAA;QAED;;WAEG;QACK,gBAAU,GAAG;YACnB,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;QACL,CAAC,CAAA;QAED;;WAEG;QACK,YAAM,GAAG,UAAC,KAAY;YAC5B,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC5B,KAAI,CAAC,QAAQ,CAAC;gBACZ,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;QACL,CAAC,CAAA;QAjCC,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;QAEF,SAAS,CAAC,KAAK,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;;IAC7C,CAAC;IA8BM,oCAAM,GAAb;QACE,MAAM,CAAC,CACL;YACE,oBAAC,aAAK,QAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAS;YAEjC,oBAAC,sBAAa,IAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAC/B,OAAO,EAAE,IAAI,CAAC,SAAS,EACvB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAI;YAGhF,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;gBACtD,oBAAC,uBAAU,IAAC,cAAc,EAAE,2BAAc,CAAC,KAAK,IAAG,OAAO,CAAC,+BAA+B,CAAc;YAG1G,oBAAC,aAAK,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC5B,SAAS,EAAE,IAAI,CAAC,UAAU,EAC1B,IAAI,EAAE,iBAAS,CAAC,KAAK,EACrB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAClC,YAAY,EAAE,cAAK,CAAC,EACpB,SAAS,EAAE,iCAA8B,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,EAAE,CAAE;gBAE7E,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,CAC7B,2BAAG,SAAS,EAAC,yCAAyC,IAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAK,CACzF;gBAGH,oBAAC,2CAAoB,eAAK,IAAI,CAAC,KAAK,IAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,IAAI,CACnF,CACJ,CACP,CAAC;IACJ,CAAC;IACH,0BAAC;AAAD,CAtEA,AAsEC,CAtEwC,KAAK,CAAC,SAAS,GAsEvD;AAtEY,kDAAmB","file":"controls/fieldCollectionData/FieldCollectionData.js","sourcesContent":["import * as React from 'react';\r\nimport * as telemetry from '../../common/telemetry';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/components/Button';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/components/Panel';\r\nimport { Label } from 'office-ui-fabric-react/lib/components/Label';\r\nimport { CollectionDataViewer } from './collectionDataViewer';\r\nimport { IFieldCollectionDataProps, IFieldCollectionDataState } from \"./IFieldCollectionData\";\r\n// import FieldErrorMessage from '../errorMessage/FieldErrorMessage';\r\nimport * as strings from 'ControlStrings';\r\nimport { MessageBar, MessageBarType } from 'office-ui-fabric-react/lib/MessageBar';\r\n\r\nexport class FieldCollectionData extends React.Component<IFieldCollectionDataProps, IFieldCollectionDataState> {\r\n  constructor(props: IFieldCollectionDataProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      panelOpen: false\r\n    };\r\n\r\n    telemetry.track('FieldCollectionData', {});\r\n  }\r\n\r\n  /**\r\n   * Open the panel\r\n   */\r\n  private openPanel = () => {\r\n    this.setState({\r\n      panelOpen: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Closes the panel\r\n   */\r\n  private closePanel = () => {\r\n    this.setState({\r\n      panelOpen: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On save action\r\n   */\r\n  private onSave = (items: any[]) => {\r\n    this.props.onChanged(items);\r\n    this.setState({\r\n      panelOpen: false\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <Label>{this.props.label}</Label>\r\n\r\n        <DefaultButton text={this.props.manageBtnLabel}\r\n                       onClick={this.openPanel}\r\n                       disabled={this.props.fields.length === 0 || this.props.disabled} />\r\n\r\n        {\r\n          (!this.props.fields || this.props.fields.length === 0) && //<FieldErrorMessage errorMessage={strings.CollectionDataEmptyFields} />\r\n          <MessageBar messageBarType={MessageBarType.error}>{strings.CollectionDataItemMissingFields}</MessageBar>\r\n        }\r\n\r\n        <Panel isOpen={this.state.panelOpen}\r\n               onDismiss={this.closePanel}\r\n               type={PanelType.large}\r\n               headerText={this.props.panelHeader}\r\n               onOuterClick={()=>{}}\r\n               className={`FieldCollectionData__panel ${this.props.panelClassName || \"\"}`}>\r\n          {\r\n            this.props.panelDescription && (\r\n              <p className=\"FieldCollectionData__panel__description\">{this.props.panelDescription}</p>\r\n            )\r\n          }\r\n\r\n          <CollectionDataViewer {...this.props} fOnSave={this.onSave} fOnClose={this.closePanel} />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}