{"version":3,"sources":["controls/folderPicker/FolderPicker.tsx"],"names":[],"mappings":"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","file":"controls/folderPicker/FolderPicker.js","sourcesContent":["import * as React from 'react';\r\nimport styles from './FolderPicker.module.scss';\r\nimport { IFolderPickerProps, IFolderPickerState } from '.';\r\nimport { IFolder } from '../../services/IFolderExplorerService';\r\nimport { IconButton, PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { getId } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport { FolderExplorer } from '../folderExplorer/FolderExplorer';\r\n\r\n\r\nexport default class FolderPicker extends React.Component<IFolderPickerProps, IFolderPickerState> {\r\n\r\n  private _folderLinkId = getId('folderLink');\r\n  private _selectedFolder: IFolder;\r\n\r\n  constructor(props: IFolderPickerProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showPanel: false,\r\n      selectedFolder: this.props.defaultFolder\r\n    };\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IFolderPickerProps) {\r\n\r\n    this.setState({\r\n      selectedFolder: nextProps.defaultFolder,\r\n    });\r\n\r\n  }\r\n\r\n  public render(): React.ReactElement<IFolderPickerProps> {\r\n    return (\r\n      <div>\r\n        {this.props.label &&\r\n          <Label className={this.props.required ? styles.required : ''} htmlFor={this._folderLinkId}>{this.props.label}</Label>\r\n        }\r\n        <div className={styles.folderPicker}>\r\n          <div className={styles.selection}>\r\n            {!this.state.selectedFolder &&\r\n              <span className={styles.selectFolderLabel}>Select a folder</span>\r\n            }\r\n            {this.state.selectedFolder &&\r\n              <div className={styles.selectFolder}>\r\n                <Link className={styles.selectFolder} target='_blank' data-interception=\"off\" id={this._folderLinkId} href={this.state.selectedFolder.ServerRelativeUrl}>\r\n                  <span title={this.state.selectedFolder.Name}>{this.state.selectedFolder.Name}</span>\r\n                </Link>\r\n                <IconButton\r\n                  iconProps={{ iconName: 'Cancel' }}\r\n                  title=\"Delete selection\"\r\n                  ariaLabel=\"Delete selection\"\r\n                  onClick={this._resetSelection}\r\n                  disabled={this.props.disabled}\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className={styles.selectButton}>\r\n            <IconButton\r\n              iconProps={{ iconName: 'FolderList' }}\r\n              title=\"Select folder\"\r\n              ariaLabel=\"Select folder\"\r\n              disabled={this.props.disabled}\r\n              onClick={this._showPanel}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Panel\r\n          isOpen={this.state.showPanel}\r\n          type={PanelType.medium}\r\n          onDismiss={this._hidePanel}\r\n          headerText=\"Select folder\"\r\n          closeButtonAriaLabel=\"Close\"\r\n          onRenderFooterContent={this._onRenderFooterContent}\r\n        >\r\n          <div>\r\n            <FolderExplorer\r\n              context={this.props.context}\r\n              rootFolder={this.props.rootFolder}\r\n              defaultFolder={this.state.selectedFolder}\r\n              onSelect={this._onFolderSelect}\r\n              canCreateFolders={this.props.canCreateFolders}\r\n            />\r\n          </div>\r\n        </Panel>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _showPanel = () => {\r\n    this.setState({ showPanel: true });\r\n  }\r\n\r\n  private _hidePanel = () => {\r\n    this.setState({ showPanel: false });\r\n  }\r\n\r\n  private _onRenderFooterContent = () => {\r\n    return (\r\n      <div className={styles.actions}>\r\n        <PrimaryButton iconProps={{ iconName: 'Save' }} onClick={this._onFolderSave}>\r\n          Save\r\n        </PrimaryButton>\r\n        <DefaultButton iconProps={{ iconName: 'Cancel' }} onClick={this._hidePanel}>\r\n          Cancel\r\n        </DefaultButton>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onFolderSelect = (folder: IFolder): void => {\r\n    this._selectedFolder = folder;\r\n  }\r\n\r\n  private _onFolderSave = (): void => {\r\n    this.setState({\r\n      selectedFolder: this._selectedFolder,\r\n      showPanel: false,\r\n    });\r\n\r\n    this.props.onSelect(this._selectedFolder);\r\n  }\r\n\r\n  private _resetSelection = (): void => {\r\n    this._selectedFolder = null;\r\n\r\n    this.setState({\r\n      selectedFolder: this._selectedFolder,\r\n    });\r\n\r\n    this.props.onSelect(this._selectedFolder);\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}