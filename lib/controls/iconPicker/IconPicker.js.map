{"version":3,"sources":["controls/iconPicker/IconPicker.tsx"],"names":[],"mappings":"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","file":"controls/iconPicker/IconPicker.js","sourcesContent":["import * as React from 'react';\r\nimport { IIconPickerProps } from '.';\r\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\r\nimport { IRenderFunction, getId } from 'office-ui-fabric-react/lib/Utilities';\r\nimport styles from './IconPicker.module.scss';\r\nimport * as strings from 'ControlStrings';\r\nimport { IconNames } from './IconNames';\r\nimport { Panel, PanelType, IPanelProps } from 'office-ui-fabric-react/lib/Panel';\r\nimport debounce = require('lodash/debounce');\r\nimport { IIconPickerState } from './IIconPickerState';\r\nimport * as telemetry from '../../common/telemetry';\r\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\n\r\nexport class IconPicker extends React.Component<IIconPickerProps, IIconPickerState> {\r\n  private radioIdBase: string = getId(\"radio\");\r\n\r\n\r\n  constructor(props: IIconPickerProps) {\r\n    super(props);\r\n\r\n    initializeIcons();\r\n\r\n    telemetry.track('IconPicker');\r\n\r\n    this.state = {\r\n      items: IconNames.Icons,\r\n      isPanelOpen: false,\r\n      currentIcon: this.props.currentIcon || null\r\n    };\r\n  }\r\n\r\n  public render(): React.ReactElement<IIconPickerProps> {\r\n    const {\r\n      buttonLabel,\r\n      buttonClassName,\r\n      disabled,\r\n      panelClassName\r\n    } = this.props;\r\n\r\n    let renderOption = this.props.renderOption;\r\n\r\n    renderOption = renderOption === undefined ? 'panel' : renderOption;\r\n    return <div>\r\n      <PrimaryButton\r\n        text={buttonLabel}\r\n        onClick={this.iconPickerOnClick}\r\n        className={buttonClassName}\r\n        disabled={disabled}\r\n        data-automation-id={`icon-picker-open`}\r\n      />\r\n      {\r\n\r\n        renderOption === 'panel' ?\r\n          <Panel\r\n            isOpen={this.state.isPanelOpen}\r\n            onDismiss={this.closePanel}\r\n            type={PanelType.medium}\r\n            data-automation-id={`icon-picker-panel`}\r\n            closeButtonAriaLabel={strings.CloseButton}\r\n            className={panelClassName}\r\n            onRenderNavigation={this.renderPanelNav}\r\n            onRenderFooterContent={this.renderPanelFooter}\r\n          >\r\n            {this.renderPanelContent()}\r\n          </Panel>\r\n          :\r\n          <Dialog\r\n            hidden={!this.state.isPanelOpen}\r\n            onDismiss={this.closePanel}\r\n            isBlocking={true}\r\n            containerClassName={styles.dialog}\r\n\r\n            dialogContentProps={{\r\n              type: DialogType.normal,\r\n              title: strings.SelectIcon,\r\n              showCloseButton: true,\r\n              className: panelClassName\r\n            }}\r\n          >\r\n            <SearchBox className={styles.searchBox}\r\n              onAbort={this.onAbort}\r\n              data-automation-id={`icon-picker-search`}\r\n              onSearch={debounce(this.onChange, 300)}\r\n              onChange={debounce(this.onChange, 300)} />\r\n            <div className={styles.dialogIconsContainer}>\r\n              {this.renderPanelContent()}\r\n            </div>\r\n\r\n            <DialogFooter>\r\n              <div className={styles.dialogFooter}>\r\n                <Icon iconName={this.state.currentIcon} className={styles.dialogSelectedIcons} />\r\n                <PrimaryButton className={styles.save} text={strings.SaveButtonLabel} onClick={this.confirmSelection} disabled={!this.state.currentIcon} data-automation-id={`icon-picker-save`} />\r\n                <DefaultButton text={strings.CancelButtonLabel} onClick={this.closePanel} className={styles.btnCancel} data-automation-id={`icon-picker-close`} />\r\n              </div>\r\n            </DialogFooter>\r\n          </Dialog>\r\n\r\n      }\r\n    </div>;\r\n  }\r\n\r\n  private closePanel = (): void => {\r\n    this.setState({\r\n      currentIcon: this.props.currentIcon,\r\n      isPanelOpen: false\r\n    });\r\n  }\r\n\r\n  private iconPickerOnClick = (): void => {\r\n    this.setState({\r\n      isPanelOpen: true,\r\n      items: IconNames.Icons\r\n    });\r\n  }\r\n\r\n  private iconOnClick = (iconName: string): void => {\r\n    if (this.props.onChange) {\r\n      this.props.onChange(iconName);\r\n    }\r\n    this.setState({\r\n      currentIcon: iconName\r\n    });\r\n  }\r\n\r\n  private onAbort = (): void => {\r\n    this.setState({ items: IconNames.Icons });\r\n  }\r\n\r\n  private onChange = (newValue?: string): void => {\r\n    let items: string[];\r\n    if (newValue && newValue.trim().length > 2) {\r\n      items = IconNames.Icons.filter(item => {\r\n        return item.toLocaleLowerCase().indexOf(newValue.toLocaleLowerCase()) !== -1;\r\n      });\r\n    } else {\r\n      items = IconNames.Icons;\r\n    }\r\n    this.setState({\r\n      items: items\r\n    });\r\n  }\r\n\r\n  private confirmSelection = (): void => {\r\n    if (this.props.onSave) {\r\n      this.props.onSave(this.state.currentIcon);\r\n    }\r\n    this.setState({\r\n      isPanelOpen: false\r\n    });\r\n  }\r\n\r\n  private renderPanelNav: IRenderFunction<IPanelProps> = (props: IPanelProps, defaultRender: IRenderFunction<IPanelProps>) => {\r\n    return <div className={styles.navArea}>\r\n      <h2 className={styles.headTitle}>{strings.SelectIcon}</h2>\r\n      <SearchBox className={styles.searchBox}\r\n        onAbort={this.onAbort}\r\n        data-automation-id={`icon-picker-search`}\r\n        onSearch={debounce(this.onChange, 300)}\r\n        onChange={debounce(this.onChange, 300)} />\r\n      <div className={styles.closeBtnContainer}>{defaultRender!(props)}</div>\r\n    </div>;\r\n  }\r\n\r\n  private renderPanelContent = () => {\r\n    return <div>\r\n      {this.renderIcons()}\r\n    </div>;\r\n  }\r\n\r\n  private renderPanelFooter: IRenderFunction<IPanelProps> = () => {\r\n    return <div className={styles.footer} data-automation-id={`icon-picker-footer`}>\r\n      <PrimaryButton text={strings.SaveButtonLabel} onClick={this.confirmSelection} disabled={!this.state.currentIcon} className={styles.btnSave} data-automation-id={`icon-picker-save`} />\r\n      <div className={`${styles.selectionDisplay} ${!this.state.currentIcon ? 'noSelection' : ''}`}>\r\n        <span className={styles.selectionLabel}>{strings.SelectedLabel}:</span>\r\n        <Icon iconName={this.state.currentIcon} className={styles.selectionIcon} />\r\n      </div>\r\n      <DefaultButton text={strings.CancelButtonLabel} onClick={this.closePanel} className={styles.btnCancel} data-automation-id={`icon-picker-close`} />\r\n    </div>;\r\n  }\r\n\r\n  private renderIcons = (): React.ReactElement<IIconPickerProps> => {\r\n    return (<ul className={styles.iconList}>\r\n      {this.state.items.map(this.renderIcon)}\r\n    </ul>);\r\n  }\r\n\r\n  private renderIcon = (item: string): JSX.Element => {\r\n    const radioId: string = `${this.radioIdBase}-${item}`;\r\n    return <li className={styles.iconItem}>\r\n      <input type=\"radio\" name={this.radioIdBase} id={radioId} className={styles.iconRadio}\r\n        data-automation-id={`icon-picker-${item}`}\r\n        checked={item == this.state.currentIcon}\r\n        onChange={() => this.iconOnClick(item)} />\r\n      <label className={styles.iconLabel} htmlFor={radioId} title={item}>\r\n        <Icon iconName={item} className={styles.iconGlyph} />\r\n        <span className={styles.iconName}>{item}</span>\r\n      </label>\r\n    </li>;\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}