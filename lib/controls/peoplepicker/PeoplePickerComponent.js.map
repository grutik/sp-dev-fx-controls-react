{"version":3,"sources":["controls/peoplepicker/PeoplePickerComponent.tsx"],"names":[],"mappings":"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","file":"controls/peoplepicker/PeoplePickerComponent.js","sourcesContent":["import * as strings from 'ControlStrings';\r\nimport * as React from 'react';\r\nimport * as telemetry from '../../common/telemetry';\r\nimport styles from './PeoplePickerComponent.module.scss';\r\nimport SPPeopleSearchService from \"../../services/PeopleSearchService\";\r\nimport { IPeoplePickerProps, IPeoplePickerState } from './IPeoplePicker';\r\nimport { TooltipHost, DirectionalHint } from 'office-ui-fabric-react/lib/Tooltip';\r\nimport { NormalPeoplePicker } from 'office-ui-fabric-react/lib/components/pickers/PeoplePicker/PeoplePicker';\r\nimport { Label } from 'office-ui-fabric-react/lib/components/Label';\r\nimport { IBasePickerSuggestionsProps } from \"office-ui-fabric-react/lib/components/pickers/BasePicker.types\";\r\nimport { IPersonaProps } from \"office-ui-fabric-react/lib/components/Persona/Persona.types\";\r\nimport { Icon } from \"office-ui-fabric-react/lib/components/Icon\";\r\nimport isEqual = require('lodash/isEqual');\r\nimport uniqBy = require('lodash/uniqBy');\r\n\r\n/**\r\n * PeoplePicker component\r\n */\r\nexport class PeoplePicker extends React.Component<IPeoplePickerProps, IPeoplePickerState> {\r\n  private peopleSearchService: SPPeopleSearchService;\r\n  private suggestionsLimit: number;\r\n  private groupId: number;\r\n\r\n  constructor(props: IPeoplePickerProps) {\r\n    super(props);\r\n\r\n    this.peopleSearchService = new SPPeopleSearchService(props.context);\r\n    this.suggestionsLimit = this.props.suggestionsLimit ? this.props.suggestionsLimit : 5;\r\n\r\n    telemetry.track('ReactPeoplePicker', {\r\n      groupName: !!props.groupName,\r\n      name: !!props.groupName,\r\n      titleText: !!props.titleText\r\n    });\r\n\r\n    this.state = {\r\n      selectedPersons: [],\r\n      mostRecentlyUsedPersons: [],\r\n      showRequiredError: false,\r\n      resolveDelay: this.props.resolveDelay || 200,\r\n      errorMessage: null\r\n    };\r\n  }\r\n\r\n\r\n  /**\r\n   * componentWillMount lifecycle hook\r\n   */\r\n  public componentWillMount(): void {\r\n    this.getInitialPersons(this.props);\r\n  }\r\n\r\n\r\n  /**\r\n   * componentWillUpdate lifecycle hook\r\n   */\r\n  public componentWillUpdate(nextProps: IPeoplePickerProps, nextState: IPeoplePickerState): void {\r\n    if (!isEqual(this.props.defaultSelectedUsers, nextProps.defaultSelectedUsers) ||\r\n      this.props.groupName !== nextProps.groupName ||\r\n      this.props.webAbsoluteUrl !== nextProps.webAbsoluteUrl ||\r\n      this.peopleSearchService.getSumOfPrincipalTypes(this.props.principalTypes) !== this.peopleSearchService.getSumOfPrincipalTypes(nextProps.principalTypes)) {\r\n      this.getInitialPersons(nextProps);\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IPeoplePickerProps) {\r\n    if (this.props.showRequiredError !== nextProps.showRequiredError && nextProps.showRequiredError) {\r\n      this.setState({\r\n        showRequiredError: !this.state.selectedPersons || !this.state.selectedPersons.length\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Get initial persons\r\n   */\r\n  private async getInitialPersons(props: IPeoplePickerProps) {\r\n    const { groupName, webAbsoluteUrl, defaultSelectedUsers, ensureUser, principalTypes } = props;\r\n    // Check if a group property was provided, and get the group ID\r\n    if (groupName) {\r\n      this.groupId = await this.peopleSearchService.getGroupId(groupName, webAbsoluteUrl);\r\n      if (!this.groupId) {\r\n        this.setState({\r\n          errorMessage: strings.PeoplePickerGroupNotFound\r\n        });\r\n        return;\r\n      }\r\n    } else {\r\n      this.groupId = null;\r\n    }\r\n\r\n    // Check for default user values\r\n    if (defaultSelectedUsers) {\r\n      let selectedPersons: IPersonaProps[] = [];\r\n      for (const userValue of props.defaultSelectedUsers) {\r\n        const userResult = await this.peopleSearchService.searchPersonByEmailOrLogin(userValue, principalTypes, webAbsoluteUrl, this.groupId, ensureUser);\r\n        if (userResult) {\r\n          selectedPersons.push(userResult);\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        selectedPersons\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * A search field change occured\r\n   */\r\n  private onSearchFieldChanged = async (searchText: string, currentSelected: IPersonaProps[]): Promise<IPersonaProps[]> => {\r\n    if (searchText.length > 2) {\r\n      const results = await this.peopleSearchService.searchPeople(searchText, this.suggestionsLimit, this.props.principalTypes, this.props.webAbsoluteUrl, this.groupId, this.props.ensureUser);\r\n      // Remove duplicates\r\n      const { selectedPersons, mostRecentlyUsedPersons } = this.state;\r\n      const filteredPersons = this.removeDuplicates(results, selectedPersons);\r\n      // Add the users to the most recently used ones\r\n      let recentlyUsed = [...filteredPersons, ...mostRecentlyUsedPersons];\r\n      recentlyUsed = uniqBy(recentlyUsed, \"text\");\r\n      this.setState({\r\n        mostRecentlyUsedPersons: recentlyUsed.slice(0, this.suggestionsLimit)\r\n      });\r\n      return filteredPersons;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On item selection change event\r\n   */\r\n  private onChange = (items: IPersonaProps[]): void => {\r\n    const { selectedItems: triggerUpdate } = this.props;\r\n\r\n    this.setState({\r\n      selectedPersons: items,\r\n      showRequiredError: items.length > 0 ? false : true\r\n    });\r\n\r\n    if (triggerUpdate) {\r\n      triggerUpdate(items);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the most recently used person\r\n   *\r\n   * @param currentPersonas\r\n   */\r\n  private returnMostRecentlyUsedPerson = (currentPersonas: IPersonaProps[]): IPersonaProps[] => {\r\n    let { mostRecentlyUsedPersons } = this.state;\r\n    return this.removeDuplicates(mostRecentlyUsedPersons, currentPersonas);\r\n  }\r\n\r\n\r\n  /**\r\n   * Removes duplicates\r\n   *\r\n   * @param personas\r\n   * @param possibleDupes\r\n   */\r\n  private removeDuplicates = (personas: IPersonaProps[], possibleDupes: IPersonaProps[]): IPersonaProps[] => {\r\n    return personas.filter(persona => !this.listContainsPersona(persona, possibleDupes));\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks if list contains the person\r\n   *\r\n   * @param persona\r\n   * @param personas\r\n   */\r\n  private listContainsPersona = (persona: IPersonaProps, personas: IPersonaProps[]): boolean => {\r\n    if (!personas || !personas.length || personas.length === 0) {\r\n      return false;\r\n    }\r\n    return personas.filter(item => item.text === persona.text).length > 0;\r\n  }\r\n\r\n\r\n  /**\r\n   * Default React component render method\r\n   */\r\n  public render(): React.ReactElement<IPeoplePickerProps> {\r\n\r\n    const {\r\n      peoplePickerCntrlclassName,\r\n      peoplePickerWPclassName,\r\n      isRequired,\r\n      titleText,\r\n      suggestionsLimit,\r\n      placeholder,\r\n      personSelectionLimit,\r\n      disabled,\r\n      showtooltip,\r\n      tooltipMessage,\r\n      tooltipDirectional,\r\n      errorMessageClassName,\r\n      errorMessage\r\n    } = this.props;\r\n\r\n    const {\r\n      selectedPersons,\r\n      resolveDelay,\r\n      errorMessage: stateErrorMessage,\r\n      showRequiredError\r\n    } = this.state;\r\n\r\n    const suggestionProps: IBasePickerSuggestionsProps = {\r\n      suggestionsHeaderText: strings.peoplePickerSuggestionsHeaderText,\r\n      noResultsFoundText: strings.genericNoResultsFoundText,\r\n      loadingText: strings.peoplePickerLoadingText,\r\n      resultsMaximumNumber: suggestionsLimit ? suggestionsLimit : 5,\r\n      searchingText: strings.PeoplePickerSearchText\r\n    };\r\n\r\n\r\n    const peoplepicker = (\r\n      <div id=\"people\" className={`${styles.defaultClass} ${peoplePickerWPclassName ? peoplePickerWPclassName : ''}`}>\r\n        {titleText && <Label required={isRequired}>{titleText}</Label>}\r\n\r\n        <NormalPeoplePicker pickerSuggestionsProps={suggestionProps}\r\n          onResolveSuggestions={this.onSearchFieldChanged}\r\n          onEmptyInputFocus={this.returnMostRecentlyUsedPerson}\r\n          getTextFromItem={(peoplePersonaMenu: IPersonaProps) => peoplePersonaMenu.text}\r\n          className={`ms-PeoplePicker ${peoplePickerCntrlclassName ? peoplePickerCntrlclassName : ''}`}\r\n          key={'normal'}\r\n          removeButtonAriaLabel={'Remove'}\r\n          inputProps={{\r\n            'aria-label': 'People Picker',\r\n            placeholder: placeholder\r\n          }}\r\n          selectedItems={selectedPersons}\r\n          itemLimit={personSelectionLimit || 1}\r\n          disabled={disabled || !!stateErrorMessage}\r\n          onChange={this.onChange}\r\n          resolveDelay={resolveDelay} />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          showtooltip ? (\r\n            <TooltipHost content={tooltipMessage || strings.peoplePickerComponentTooltipMessage}\r\n              id='pntp'\r\n              calloutProps={{ gapSpace: 0 }}\r\n              directionalHint={tooltipDirectional || DirectionalHint.leftTopEdge}>\r\n              {peoplepicker}\r\n            </TooltipHost>\r\n          ) : (\r\n              <div>\r\n                {peoplepicker}\r\n              </div>\r\n            )\r\n        }\r\n\r\n        {\r\n          ((isRequired && showRequiredError) || (stateErrorMessage)) && (\r\n            <p className={`ms-TextField-errorMessage ${styles.errorMessage} ${errorMessageClassName ? errorMessageClassName : ''}`}>\r\n              <Icon iconName='Error' className={styles.errorIcon} />\r\n              {\r\n                stateErrorMessage && <span data-automation-id=\"error-message\">{stateErrorMessage}</span>\r\n              }\r\n\r\n              {\r\n                (isRequired && showRequiredError) && <span data-automation-id=\"error-message\">{errorMessage ? errorMessage : strings.peoplePickerComponentErrorMessage}</span>\r\n              }\r\n            </p>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":"..\\..\\..\\src"}