{"version":3,"sources":["controls/treeView/ITreeItemActions.ts"],"names":[],"mappings":";;AAGA;;GAEG;AACH,IAAY,0BAGX;AAHD,WAAY,0BAA0B;IAClC,iFAAW,CAAA;IACX,+FAAc,CAAA;AAClB,CAAC,EAHW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QAGrC","file":"controls/treeView/ITreeItemActions.js","sourcesContent":["import { ITreeItem } from './ITreeItem';\r\nimport { IIconProps } from 'office-ui-fabric-react/lib/Icon';\r\n\r\n/**\r\n * Specifies the display mode of the tree item action.\r\n */\r\nexport enum TreeItemActionsDisplayMode {\r\n    Buttons = 1,\r\n    ContextualMenu\r\n}\r\n\r\n/**\r\n * Tree item actions.\r\n */\r\nexport interface ITreeItemActions {\r\n    /**\r\n     * List of actions.\r\n     */\r\n    actions: ITreeItemAction[];\r\n    /**\r\n     * Display mode of the tree item actions.\r\n     */\r\n    treeItemActionsDisplayMode?: TreeItemActionsDisplayMode;\r\n}\r\n\r\n/**\r\n * TreeItemActionsControl properties interface\r\n */\r\nexport interface ITreeItemActionsControlProps {\r\n    /**\r\n     * Current tree item.\r\n     */\r\n    treeItem: ITreeItem;\r\n    /**\r\n     * List of actions.\r\n     */\r\n    treeItemActions: ITreeItemActions;\r\n    /**\r\n     * Callback after execution of tree item action.\r\n     */\r\n    treeItemActionCallback: () => void;\r\n}\r\n\r\n/**\r\n * TreeItemActionsControl state interface\r\n */\r\nexport interface ITreeItemActionsControlState {\r\n    /**\r\n     * Specifies the list of the available actions for the tree item.\r\n     */\r\n    availableActions: ITreeItemAction[];\r\n    /**\r\n     * TreeItemAction display mode.\r\n     */\r\n    displayMode: TreeItemActionsDisplayMode;\r\n}\r\n\r\n/**\r\n * ConcreteTreeItemAction properties interface\r\n */\r\nexport interface IConcreteTreeItemActionProps {\r\n    /**\r\n     * Specifies the list of the available actions for the tree item.\r\n     */\r\n    treeItemActions: ITreeItemAction[];\r\n    /**\r\n     * Current tree item\r\n     */\r\n    treeItem: ITreeItem;\r\n\r\n    /**\r\n     * Method to be executed when action is fired.\r\n     */\r\n    treeItemActionCallback: () => void;\r\n}\r\n\r\n/**\r\n * Interface represents the possible action that could be execute on tree item level.\r\n */\r\nexport interface ITreeItemAction {\r\n    /**\r\n     * Action ID\r\n     */\r\n    id: string;\r\n    /**\r\n     * Action title\r\n     */\r\n    title?: string;\r\n    /**\r\n     * Icon to be displayed for the action.\r\n     */\r\n    iconProps?: IIconProps;\r\n    /**\r\n     * Specify if the action is hidden. This could be used for instance when you want to invoke the action right after rendering.\r\n     */\r\n    hidden?: boolean;\r\n    /**\r\n     * Specifies if you want to invoke the action on render\r\n     */\r\n    invokeActionOnRender?: boolean;\r\n\r\n    /**\r\n     * Method to be executed when action is fired.\r\n     *  @param currentTreeItem\r\n     */\r\n    actionCallback: (currentTreeItem: ITreeItem) => void;\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}