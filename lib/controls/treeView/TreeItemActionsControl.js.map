{"version":3,"sources":["controls/treeView/TreeItemActionsControl.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,uDAA6I;AAC7I,mEAAkE;AAClE,+DAA0D;AAE1D;;GAEG;AACH;IAAoD,0CAA2E;IAC3H;;;OAGG;IACH,gCAAY,KAAmC;QAA/C,YACI,kBAAM,KAAK,CAAC,SASf;QAPW,IAAA,6CAAe,CAAgB;QACvC,IAAM,WAAW,GAAG,eAAe,CAAC,0BAA0B,GAAG,eAAe,CAAC,0BAA0B,GAAG,6CAA0B,CAAC,OAAO,CAAC;QAEjJ,KAAI,CAAC,KAAK,GAAG;YACT,gBAAgB,EAAE,EAAE;YACpB,WAAW,aAAA;SACd,CAAC;;IACN,CAAC;IAED;;OAEG;IACI,mDAAkB,GAAzB;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAED;;OAEG;IACW,oDAAmB,GAAjC;;;;gBACY,eAAe,GAAK,IAAI,CAAC,KAAK,gBAAf,CAAgB;gBAGjC,gBAAgB,GAAsB,EAAE,CAAC;gBAE/C,EAAE,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC1B,GAAG,CAAC,OAAwC,EAAvB,KAAA,eAAe,CAAC,OAAO,EAAvB,cAAuB,EAAvB,IAAuB;wBAAjC,MAAM;wBACb,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACjC;gBACL,CAAC;gBAED,IAAI,CAAC,QAAQ,CAAC;oBACV,gBAAgB,kBAAA;iBACnB,CAAC,CAAC;;;;KACN;IAED;;OAEG;IACI,uCAAM,GAAb;QACY,IAAA,8BAAQ,CAAgB;QAC1B,IAAA,eAA8C,EAA5C,4BAAW,EAAE,sCAAgB,CAAgB;QAErD,EAAE,CAAC,CAAC,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjE,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,MAAM,CAAC,CACH,iCAEQ,WAAW,IAAI,6CAA0B,CAAC,cAAc;YACpD,oBAAC,+CAAsB,IAAC,GAAG,EAAE,cAAY,QAAQ,CAAC,GAAK,EACnD,eAAe,EAAE,gBAAgB,EACjC,QAAQ,EAAE,QAAQ,EAClB,sBAAsB,EAAE,IAAI,CAAC,KAAK,CAAC,sBAAsB,GAAI;;gBAEjE,oBAAC,8BAAoB,IAAC,GAAG,EAAE,eAAa,QAAQ,CAAC,GAAK,EAClD,eAAe,EAAE,gBAAgB,EACjC,QAAQ,EAAE,QAAQ,EAAE,sBAAsB,EAAE,IAAI,CAAC,KAAK,CAAC,sBAAsB,GAAI,CAE3F,CACT,CAAC;IACN,CAAC;IACL,6BAAC;AAAD,CAvEA,AAuEC,CAvEmD,KAAK,CAAC,SAAS,GAuElE","file":"controls/treeView/TreeItemActionsControl.js","sourcesContent":["import * as React from 'react';\r\nimport { ITreeItemAction, ITreeItemActionsControlProps, ITreeItemActionsControlState, TreeItemActionsDisplayMode } from './ITreeItemActions';\r\nimport { DropdownTreeItemAction } from './DropdownTreeItemAction';\r\nimport ButtonTreeItemAction from './ButtonTreeItemAction';\r\n\r\n/**\r\n * Renders the controls for TreeItem actions component\r\n */\r\nexport default class TreeItemActionsControl extends React.Component<ITreeItemActionsControlProps, ITreeItemActionsControlState> {\r\n    /**\r\n     * Constructor method\r\n     * @param props properties interface\r\n     */\r\n    constructor(props: ITreeItemActionsControlProps) {\r\n        super(props);\r\n\r\n        const { treeItemActions } = this.props;\r\n        const displayMode = treeItemActions.treeItemActionsDisplayMode ? treeItemActions.treeItemActionsDisplayMode : TreeItemActionsDisplayMode.Buttons;\r\n\r\n        this.state = {\r\n            availableActions: [],\r\n            displayMode\r\n        };\r\n    }\r\n\r\n    /**\r\n     * componentWillMount lifecycle hook\r\n     */\r\n    public componentWillMount(): void {\r\n        this.getAvailableActions();\r\n    }\r\n\r\n    /**\r\n     * Get the available treeItem actions\r\n     */\r\n    private async getAvailableActions(): Promise<void> {\r\n        const { treeItemActions } = this.props;\r\n\r\n        // Prepare list of the available actions\r\n        const availableActions: ITreeItemAction[] = [];\r\n\r\n        if (treeItemActions.actions) {\r\n            for (const action of treeItemActions.actions) {\r\n                availableActions.push(action);\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            availableActions\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Default React render method\r\n     */\r\n    public render(): React.ReactElement<ITreeItemActionsControlProps> {\r\n        const { treeItem } = this.props;\r\n        const { displayMode, availableActions } = this.state;\r\n\r\n        if (!availableActions || availableActions.length <= 0 || !treeItem) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    displayMode == TreeItemActionsDisplayMode.ContextualMenu ?\r\n                        <DropdownTreeItemAction key={`DdAction-${treeItem.key}`}\r\n                            treeItemActions={availableActions}\r\n                            treeItem={treeItem}\r\n                            treeItemActionCallback={this.props.treeItemActionCallback} />\r\n                        :\r\n                        <ButtonTreeItemAction key={`BtnAction-${treeItem.key}`}\r\n                            treeItemActions={availableActions}\r\n                            treeItem={treeItem} treeItemActionCallback={this.props.treeItemActionCallback} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}