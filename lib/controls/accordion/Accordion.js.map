{"version":3,"sources":["controls/accordion/Accordion.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,iEAA6C;AAE7C,mDAAkD;AAClD,uEAA6E;AAE7E,kDAAoD;AAEpD;;GAEG;AACH,IAAM,aAAa,GAAe,EAAE,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,+BAAM,CAAC,gBAAgB,EAAE,CAAC;AACnG,IAAM,YAAY,GAAe,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,+BAAM,CAAC,gBAAgB,EAAE,CAAC;AAEjG;IAA+B,6BAAiD;IAE9E,mBAAY,KAAsB;QAAlC,YACE,kBAAM,KAAK,CAAC,SAOb;QATO,gBAAU,GAAmB,SAAS,CAAC;QAI7C,KAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE,CAAC,KAAK,CAAC,gBAAgB;SAClC,CAAC;QAEF,SAAS,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;;IACxC,CAAC;IAEM,0BAAM,GAAb;QAAA,iBAuBC;QAtBC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAE,SAAG,CAAC,+BAAM,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACzD,oBAAC,sBAAa,IACZ,OAAO,EAAE,IAAI,EACb,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC5B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACtB,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,YAAY,GAAG,aAAa,EAC7D,OAAO,EAAE;oBACP,KAAI,CAAC,QAAQ,CAAC;wBACZ,QAAQ,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ;qBAC/B,CAAC,CAAC;gBACL,CAAC,mBACc,IAAI,CAAC,KAAK,CAAC,QAAQ,mBACnB,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,GACpD;YACD,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAClB,6BAAK,SAAS,EAAE,+BAAM,CAAC,MAAM,EAAE,GAAG,EAAE,UAAC,EAAE,IAAO,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC,CAAC,CAAC,IAClE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAChB,CAEJ,CACP,CAAC;IACJ,CAAC;IACH,gBAAC;AAAD,CApCA,AAoCC,CApC8B,KAAK,CAAC,SAAS,GAoC7C;AApCY,8BAAS","file":"controls/accordion/Accordion.js","sourcesContent":["import * as React from 'react';\r\nimport styles from './Accordion.module.scss';\r\nimport { IAccordionProps, IAccordionState } from './index';\r\nimport { css } from \"@uifabric/utilities/lib/css\";\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/components/Button';\r\nimport { IIconProps } from 'office-ui-fabric-react/lib/Icon';\r\nimport * as telemetry from '../../common/telemetry';\r\n\r\n/**\r\n * Icon styles. Feel free to change them\r\n */\r\nconst collapsedIcon: IIconProps = { iconName: 'ChevronRight', className: styles.accordionChevron };\r\nconst expandedIcon: IIconProps = { iconName: 'ChevronDown', className: styles.accordionChevron };\r\n\r\nexport class Accordion extends React.Component<IAccordionProps, IAccordionState> {\r\n  private _drawerDiv: HTMLDivElement = undefined;\r\n  constructor(props: IAccordionProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      expanded: !props.defaultCollapsed\r\n    };\r\n\r\n    telemetry.track('ReactAccordion', {});\r\n  }\r\n\r\n  public render(): React.ReactElement<IAccordionProps> {\r\n    return (\r\n      <div className={css(styles.accordion, this.props.className)}>\r\n        <DefaultButton\r\n          toggled={true}\r\n          checked={this.state.expanded}\r\n          text={this.props.title}\r\n          iconProps={this.state.expanded ? expandedIcon : collapsedIcon}\r\n          onClick={() => {\r\n            this.setState({\r\n              expanded: !this.state.expanded\r\n            });\r\n          }}\r\n          aria-expanded={this.state.expanded}\r\n          aria-controls={this._drawerDiv && this._drawerDiv.id}\r\n        />\r\n        {this.state.expanded &&\r\n          <div className={styles.drawer} ref={(el) => { this._drawerDiv = el; }}>\r\n            {this.props.children}\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"],"sourceRoot":"..\\..\\..\\src"}